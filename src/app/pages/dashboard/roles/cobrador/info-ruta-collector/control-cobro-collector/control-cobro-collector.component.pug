
section.modalOptions.section
    .setOptions
        .card
            .card-header
                h4 Control de cobros - Valor a cobrar: {{ this.cobro.vcuotas }}
            .card-body
                .row(*ngIf='this.sinPagos == true')
                    h6
                        i.fas.fa-exclamation-triangle
                        | Sin cobros realizados
                .row(*ngIf='this.sinPagos == false')
                    .status( *ngFor='let item of this.cobro.cuotas; let i = index', style="width: 100%; display: block; height: 100%" ) Cuota {{ i + 1 }}
                        .row( style="width: 100%; display: flex; height: 100%" )
                            .porcGanancia.col-md-12.col-lg-3
                              small.bold Resumen
                              br
                              span.ganancia {{ item.resumen }}

                            .porcGanancia.col-md-12.col-lg-3
                              small.bold Pagado
                              br
                              span.ganancia {{ item.pagado }}

                            .porcGanancia.col-md-12.col-lg-3
                              small.bold Valor restante
                              br
                              span.ganancia {{ item.restante }}
                            .porcGanancia.col-md-12.col-lg-3( *ngIf='item.penalizacion > 0' )
                              small.bold Penalización
                              br
                              span.ganancia {{ item.penalizacion }}




                form( [formGroup]="form" ,(ngSubmit)="this.hacerCobro()")
                    .row
                        .form-group.col-md-12.col-lg-6
                            label(for="monto") Monto a cobrar
                            input#monto.form-control(  type="monto" formControlName="monto" , name="monto")
                            app-field-error( *ngIf="this._formResources.isFieldValid('monto', this.form) && this.form.get('monto').errors.required ", [errorMsg]="this.errorFields.monto.required" )
                        .form-group.col-md-12.col-lg-6
                            label(for="observacion") Observacion (Opcional)
                            input#observacion.form-control(  type="text" formControlName="observacion" , name="observacion")



            .card-footer
                .row
                    .spaceButtons
                        button.btn.btn-primary( (click)="this.hacerCobro()" )
                            i.fas.fa-check
                            | Aceptar
                        //- button.btn.btn-primary( type="submit", *ngIf='this.confirmNotCollector == true' )
                        //-   i.fas.fa-check
                        //-   | ¿Crear cliente sin cobrador designado?
                        button.btn.btn-primary( type="button", (click)="this.closeDialog()" )
                            i.fas.fa-times
                            | Cerrar




//- cobrador_id
//- card_id
//- name
//- last_name
//- dir_domicilio
//- edad
//- perce_pagos
//- prestado
//- concurrencia


//- app-paginator(*ngIf="( this.paginator != null ) && ( this.paginator.pageCount > 1 )", [paginator]="this.paginator", (newPageResponse)="this.newPageResponse($event)")